(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{197:function(t,e,o){"use strict";o.r(e);var n=o(0),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"api-documentation-and-reference"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#api-documentation-and-reference"}},[t._v("#")]),t._v(" API documentation and reference")]),t._v(" "),o("h2",{attrs:{id:"undoredo-options-⇒-function"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#undoredo-options-⇒-function"}},[t._v("#")]),t._v(" undoRedo(options) ⇒ "),o("code",[t._v("function")])]),t._v(" "),o("p",[t._v("The Undo-Redo plugin module")]),t._v(" "),o("p",[o("strong",[t._v("Returns")]),t._v(": "),o("code",[t._v("function")]),t._v(" - plugin - the plugin function which accepts the store parameter")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[t._v("Param")]),t._v(" "),o("th",[t._v("Type")]),t._v(" "),o("th",[t._v("Description")])])]),t._v(" "),o("tbody",[o("tr",[o("td",[t._v("options")]),t._v(" "),o("td",[o("code",[t._v("Object")])]),t._v(" "),o("td")]),t._v(" "),o("tr",[o("td",[t._v("options.namespace")]),t._v(" "),o("td",[o("code",[t._v("String")])]),t._v(" "),o("td",[t._v("The named vuex store module")])]),t._v(" "),o("tr",[o("td",[t._v("options.ignoreMutations")]),t._v(" "),o("td",[o("code",[t._v("Array.<String>")])]),t._v(" "),o("td",[t._v("The list of store mutations (belonging to the module) to be ignored")])]),t._v(" "),o("tr",[o("td",[t._v("options.exposeUndoRedoConfig")]),t._v(" "),o("td",[o("code",[t._v("Boolean")])]),t._v(" "),o("td",[t._v("(Optional) Flag to expose the "),o("code",[t._v("done")]),t._v(" and "),o("code",[t._v("undone")]),t._v(" mutation stacks")])])])]),t._v(" "),o("h2",{attrs:{id:"undoredo-redo"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#undoredo-redo"}},[t._v("#")]),t._v(" undoRedo:redo()")]),t._v(" "),o("p",[t._v("The Redo function - commits the latest undone mutation to the store,\nand pushes it to the done stack")]),t._v(" "),o("h2",{attrs:{id:"undoredo-undo"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#undoredo-undo"}},[t._v("#")]),t._v(" undoRedo:undo()")]),t._v(" "),o("p",[t._v("The Undo function - pushes the latest done mutation to the top of the undone\nstack by popping the done stack and 'replays' all mutations in the done stack")]),t._v(" "),o("h2",{attrs:{id:"undoredo-clear"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#undoredo-clear"}},[t._v("#")]),t._v(" undoRedo:clear()")]),t._v(" "),o("p",[t._v("The Clear function - empties the done and undone stacks, and re-initializes\nthe store's state by executing the "),o("code",[t._v("emptyState")]),t._v(" mutation")]),t._v(" "),o("h2",{attrs:{id:"undoredo-reset"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#undoredo-reset"}},[t._v("#")]),t._v(" undoRedo:reset()")]),t._v(" "),o("p",[t._v("The Reset function - empties the done and undone stacks, and resets the\nstore's initial state to the current by executing the "),o("code",[t._v("resetState")]),t._v(" mutation")]),t._v(" "),o("h2",{attrs:{id:"undoredo-pipeactions-actions"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#undoredo-pipeactions-actions"}},[t._v("#")]),t._v(" undoRedo:pipeActions(actions)")]),t._v(" "),o("p",[t._v("Piping async action calls sequentially using Array.prototype.reduce\nto chain and initial, empty promise")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[t._v("Param")]),t._v(" "),o("th",[t._v("Type")]),t._v(" "),o("th",[t._v("Description")])])]),t._v(" "),o("tbody",[o("tr",[o("td",[t._v("actions")]),t._v(" "),o("td",[o("code",[t._v("Array.<Object>")])]),t._v(" "),o("td",[t._v("The array of objects containing the each action's name and payload")])])])]),t._v(" "),o("h2",{attrs:{id:"undoredo-getconfig-namespace-⇒-object"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#undoredo-getconfig-namespace-⇒-object"}},[t._v("#")]),t._v(" undoRedo:getConfig(namespace) ⇒ "),o("code",[t._v("Object")])]),t._v(" "),o("p",[t._v("Piping async action calls sequentially using Array.prototype.reduce\nto chain and initial, empty promise")]),t._v(" "),o("p",[o("strong",[t._v("Returns")]),t._v(": "),o("code",[t._v("Object")]),t._v(" - config - The object containing the undo/redo stacks of the store module")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[t._v("Param")]),t._v(" "),o("th",[t._v("Type")]),t._v(" "),o("th",[t._v("Description")])])]),t._v(" "),o("tbody",[o("tr",[o("td",[t._v("namespace")]),t._v(" "),o("td",[o("code",[t._v("String")])]),t._v(" "),o("td",[t._v("The name of the store module")])])])]),t._v(" "),o("h2",{attrs:{id:"undoredo-setconfig-namespace-config"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#undoredo-setconfig-namespace-config"}},[t._v("#")]),t._v(" undoRedo:setConfig(namespace, config)")]),t._v(" "),o("p",[t._v("Piping async action calls sequentially using Array.prototype.reduce\nto chain and initial, empty promise")]),t._v(" "),o("table",[o("thead",[o("tr",[o("th",[t._v("Param")]),t._v(" "),o("th",[t._v("Type")]),t._v(" "),o("th",[t._v("Description")])])]),t._v(" "),o("tbody",[o("tr",[o("td",[t._v("namespace")]),t._v(" "),o("td",[o("code",[t._v("String")])]),t._v(" "),o("td",[t._v("The name of the store module")])]),t._v(" "),o("tr",[o("td",[t._v("config")]),t._v(" "),o("td",[o("code",[t._v("String")])]),t._v(" "),o("td",[t._v("The object containing the updated undo/redo stacks of the store module")])])])])])}),[],!1,null,null,null);e.default=a.exports}}]);