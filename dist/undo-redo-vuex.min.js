!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var n=t();for(var o in n)("object"==typeof exports?exports:e)[o]=n[o]}}(window,function(){return function(e){var t={};function n(o){if(t[o])return t[o].exports;var a=t[o]={i:o,l:!1,exports:{}};return e[o].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(o,a,function(t){return e[t]}.bind(null,a));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);const o=e=>t=>e.find(e=>e.namespace===t)||{},a=e=>t=>t.filter(({action:e})=>!!e).reduce((t,{action:n,payload:o})=>t.then(()=>e.dispatch(n,o)),Promise.resolve()),r=e=>(t,n)=>{const o=e.findIndex(e=>e.namespace===t);e.splice(o,1,n)},c=({paths:e,store:t})=>n=>{const a=(e=>t=>{const n=o(e)(t);return!!n&&n.done.length>0})(e)(n),r=(e=>t=>{const n=o(e)(t);return!!Object.keys(n).length&&n.undone.length>0})(e)(n);t.commit(`${n}updateCanUndoRedo`,{canUndo:a}),t.commit(`${n}updateCanUndoRedo`,{canRedo:r})};n.d(t,"undo",function(){return s}),n.d(t,"redo",function(){return d}),n.d(t,"scaffoldState",function(){return u}),n.d(t,"scaffoldActions",function(){return p}),n.d(t,"scaffoldMutations",function(){return l}),n.d(t,"scaffoldStore",function(){return f});const i=()=>{},s=i,d=i,u=e=>({...e,canUndo:!1,canRedo:!1}),p=e=>({...e,undo:s,redo:d}),l=e=>({...e,updateCanUndoRedo:(e,t)=>{void 0!==t.canUndo&&(e.canUndo=t.canUndo),void 0!==t.canRedo&&(e.canRedo=t.canRedo)}}),f=e=>({...e,state:u(e.state||{}),actions:p(e.actions||{}),mutations:l(e.mutations||{})}),y=({namespace:e="",ignoreMutations:t=[]})=>({namespace:e,ignoreMutations:t,done:[],undone:[],newMutation:!0}),m=({namespace:e,ignoreMutations:t})=>({ignoreMutations:(t||[]).map(t=>`${e}/${t}`).concat(`${e}/updateCanUndoRedo`)});t.default=(e=>t=>{const n=e.paths?(e=>e.map(({namespace:e,ignoreMutations:t})=>y({namespace:`${e}/`,...t?m({namespace:e,ignoreMutations:t}):{}})))(e.paths):[y({ignoreMutations:[...e.ignoreMutations||[],"updateCanUndoRedo"]})];t.subscribe(e=>{const a=e.type.split("/").length>1?`${e.type.split("/")[0]}/`:"",i=o(n)(a);if(Object.keys(i).length){const{ignoreMutations:o,newMutation:s,done:d}=i;e.type!==`${a}emptyState`&&e.type!==`${a}updateCanUndoRedo`&&-1===o.indexOf(e.type)&&e.type.includes(a)&&s&&(d.push(e),r(n)(a,{...i,done:d}),c({paths:n,store:t})(a))}}),t.subscribeAction(async e=>{const i=e.type.split("/").length>1?`${e.type.split("/")[0]}/`:"";switch(e.type){case`${i}redo`:(e=>t=>{const n=o(e)(t);return!!Object.keys(n).length&&n.undone.length>0})(n)(i)&&await(({paths:e,store:t})=>async n=>{const i=o(e)(n);if(Object.keys(i).length){const{undone:o,commits:s}=i.undone.reduceRight(({commits:e,undone:t,proceed:n},o)=>{if(e.length)if(n){const a=e[e.length-1],{actionGroup:r}=a.payload;e=[...(n=o.payload.actionGroup&&o.payload.actionGroup===r)?[o]:[],...e],t=[...n?[]:[o],...t]}else t=[o,...t];else e=[o],n=!!o.payload.actionGroup;return{commits:e,undone:t,proceed:n}},{commits:[],undone:[],proceed:!0});i.newMutation=!1;const d=s.map(async({type:e,payload:o})=>{t.commit(e,Array.isArray(o)?[...o]:o.constructor(o));const{redoCallback:a}=o;return{action:a?`${n}${a}`:"",payload:o}});await a(t)(await Promise.all(d)),i.done=[...i.done,...s],i.newMutation=!0,r(e)(n,{...i,undone:o}),c({paths:e,store:t})(n)}})({paths:n,store:t})(i);break;case`${i}undo`:(e=>t=>{const n=o(e)(t);return!!n&&n.done.length>0})(n)(i)&&await(({paths:e,store:t})=>async n=>{const i=o(e)(n);if(Object.keys(i).length){const{done:o,commits:s}=i.done.reduceRight(({commits:e,done:t,proceed:n},o)=>{if(e.length)if(n){const a=e[e.length-1],{actionGroup:r}=a.payload;e=[...(n=o.payload.actionGroup&&o.payload.actionGroup===r)?[o]:[],...e],t=[...n?[]:[o],...t]}else t=[o,...t];else e=[o],n=!!o.payload.actionGroup;return{done:t,commits:e,proceed:n}},{done:[],commits:[],proceed:!0}),d=s.map(({payload:e})=>({action:e.undoCallback?`${n}${e.undoCallback}`:"",payload:e}));await a(t)(d);const u=[...i.undone,...s];i.newMutation=!1,t.commit(`${n}emptyState`);const p=o.map(async e=>{t.commit(e.type,Array.isArray(e.payload)?[...e.payload]:e.payload.constructor(e.payload));const{redoCallback:o}=e.payload;return{action:o?`${n}${o}`:"",payload:e.payload}});await a(t)(await Promise.all(p)),i.newMutation=!0,r(e)(n,{...i,done:o,undone:u}),c({paths:e,store:t})(n)}})({paths:n,store:t})(i)}})})}])});